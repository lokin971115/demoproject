[{"C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\index.js":"1","C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\App.js":"2","C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\reportWebVitals.js":"3","C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\Items\\itemgrid.jsx":"4","C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\Items\\itemgridcard.jsx":"5","C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\Items\\navbar.jsx":"6"},{"size":344,"mtime":1611504117749,"results":"7","hashOfConfig":"8"},{"size":363,"mtime":1611489062375,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1715,"mtime":1611550838214,"results":"11","hashOfConfig":"8"},{"size":3270,"mtime":1611550464802,"results":"12","hashOfConfig":"8"},{"size":718,"mtime":1611999352159,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1m4m1dp",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\index.js",["29","30"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Itemgrid from './Items/itemgrid'\n\nvar key = 1;\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n",["31","32"],"C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\App.js",[],"C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\reportWebVitals.js",[],"C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\Items\\itemgrid.jsx",[],"C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\Items\\itemgridcard.jsx",["33"],"import React,{Component} from 'react'\r\n\r\nclass Itemgridcard extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            qty: 0,\r\n        };    \r\n        this.handleTypingInput = this.handleTypingInput.bind(this);\r\n        this.handleClickMinus = this.handleClickMinus.bind(this);\r\n        this.handleClickPlus = this.handleClickPlus.bind(this);\r\n        this.addToCart = this.addToCart.bind(this);\r\n    }\r\n\r\n    addToCart(){\r\n        console.log(this.props.id)\r\n        this.setState({qty: 0});\r\n    }\r\n\r\n    handleClickMinus(){\r\n        var num = this.state.qty-1\r\n        if(num<0){\r\n            num=0\r\n        }\r\n        this.setState({qty: num});\r\n    }\r\n\r\n    handleClickPlus(){\r\n        var num = this.state.qty+1\r\n        if(num>99){\r\n            num=99\r\n        }\r\n        this.setState({qty: num});\r\n    }\r\n\r\n    handleTypingInput(event) {\r\n        if(event.target.value<=0){\r\n            event.target.value=1\r\n        }\r\n        else if(event.target.value>99){\r\n            event.target.value=99\r\n        }\r\n        this.setState({qty: event.target.value});\r\n    }\r\n\r\n    qtyline={\r\n        verticalAlign: 'middle',\r\n    }\r\n\r\n    qtyInputBox={\r\n        background: '#ebece9',\r\n        textAlign: \"center\",\r\n        verticalAlign: 'middle',\r\n        border: '1px solid black',\r\n        width:50,\r\n        height:40\r\n    }\r\n    \r\n    buttonstyle={\r\n        width:50,\r\n        height:40,\r\n        verticalAlign: 'middle',\r\n    }\r\n\r\n    cardstyle={\r\n        margin: 50,\r\n        border: '1px solid black',\r\n    }\r\n\r\n    cartbtn={\r\n        marginTop: 5,\r\n        display: 'block',\r\n        border: '1px solid black',\r\n        backgroundColor: '#fff',\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"card align-items-center\" style={this.cardstyle}>\r\n                <img className=\"card-img-top\" src={this.props.item.imgurl}></img>\r\n                <div className=\"card-body align-items-center\">\r\n\r\n                    <h5 className=\"card-title text-center\">{this.props.item.title}</h5>\r\n                    <p className=\"card-text text-center\">{this.props.item.text}</p>\r\n\r\n                    <div className=\"row\" style={this.qtyline}>\r\n                        <div className=\"col-4\">\r\n                        <button className=\"btn btn-secondary\" style={this.buttonstyle} onClick={this.handleClickMinus}>-</button>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                        <input type=\"number\" className=\"noarrows\" style={this.qtyInputBox} value={this.state.qty} onChange={this.handleTypingInput} min=\"0\" max=\"99\"/>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                        <button className=\"btn btn-secondary\" style={this.buttonstyle} onClick={this.handleClickPlus}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"row\" style={this.qtyline}>\r\n                        <button className=\"btn cartbtn shadow-none col-12\" style={this.cartbtn} onClick={this.addToCart}>Add to cart</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Itemgridcard;","C:\\Users\\LokIn\\Desktop\\react\\demoproject\\src\\Items\\navbar.jsx",["34","35"],{"ruleId":"36","severity":1,"message":"37","line":7,"column":8,"nodeType":"38","messageId":"39","endLine":7,"endColumn":16},{"ruleId":"36","severity":1,"message":"40","line":9,"column":5,"nodeType":"38","messageId":"39","endLine":9,"endColumn":8},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":81,"column":17,"nodeType":"47","endLine":81,"endColumn":76},{"ruleId":"48","severity":1,"message":"49","line":4,"column":5,"nodeType":"50","messageId":"51","endLine":6,"endColumn":6},{"ruleId":"52","severity":1,"message":"53","line":17,"column":17,"nodeType":"47","endLine":17,"endColumn":54},"no-unused-vars","'Itemgrid' is defined but never used.","Identifier","unusedVar","'key' is assigned a value but never used.","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]